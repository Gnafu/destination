package it.geosolutions.graphhopper;

import static junit.framework.Assert.assertEquals;
import static org.junit.Assert.assertFalse;
import static org.junit.Assert.assertTrue;

import java.io.File;
import java.io.IOException;
import java.sql.SQLException;
import java.util.Locale;
import java.util.logging.Level;
import java.util.logging.Logger;

import org.apache.commons.dbcp.BasicDataSource;
import org.apache.commons.io.FileUtils;
import org.geotools.util.logging.Logging;
import org.junit.AfterClass;
import org.junit.BeforeClass;
import org.junit.Ignore;
import org.junit.Test;

import com.graphhopper.GHRequest;
import com.graphhopper.GHResponse;
import com.graphhopper.GraphHopper;
import com.graphhopper.util.PointList;

public class DestinationGraphHopperTest {

    static final Logger LOGGER = Logging.getLogger(DestinationGraphHopperTest.class);
    
    static String EXPECTED_LINESTRING = "LINESTRING(7.314225773307219 44.79026397915147,7.313823863427874 44.790270808121655,7.313245325831592 44.79034773536804,7.312404341527917 44.790573860494206,7.31168387036809 44.79086927602148,7.310646935790336 44.79099798480417,7.3100859070588475 44.79110676328332,7.309481664958931 44.791277940376354,7.3080688485816605 44.791716034525244,7.306643552481612 44.79222602677851,7.306103385376261 44.792321580476795,7.305645360923827 44.792431849072095,7.305122702683271 44.79266263081124,7.304582163048882 44.79277159555491,7.3037111901576335 44.792875717421076,7.30285772613118 44.79308358862438,7.302522822525862 44.793227198568594,7.301994948878772 44.79361537382637,7.301553688233056 44.793860870462524,7.300234935437924 44.79448932694992,7.299574068924205 44.79468658107564,7.299069292077481 44.7947916342644,7.298753759982149 44.79490842211787,7.2984669126227555 44.79513827253442,7.298133871662629 44.79545734365561,7.297766371766471 44.79569036056899,7.2974228999932755 44.7958563222555,7.296915515443285 44.79605581155544,7.296619168593418 44.79620892099013,7.2965455941083786 44.79630242577871,7.296533300650119 44.79637413761856,7.2964545107585455 44.79643150709044,7.296382426389659 44.79658349893801,7.296401239106086 44.79742094421582,7.296215719645077 44.79995227903021,7.296126871469473 44.80051815063919,7.295917510150019 44.801235269037676,7.295597880235267 44.801851618331334,7.2953227675405765 44.80223457818258,7.294795825216081 44.80284329063095,7.2944067186357096 44.80320222235923,7.29383991570413 44.803621317527174,7.293173833783876 44.80403445223051,7.292320928550979 44.80441778461079,7.290307595364174 44.805112365002465,7.287860824641455 44.806110929089286,7.287785946304782 44.80625379397542,7.287970161914158 44.8063150750022,7.292905426611872 44.806231442233134,7.294264226278608 44.806188787658265,7.2985322914689545 44.806126389044366,7.303582108845907 44.805998984113316,7.30855835173782 44.80592429204116,7.309547975127726 44.80586692256928,7.310100249426817 44.80578962279386,7.310809917244537 44.80561546546851,7.311627432218807 44.805263052998406,7.316545001787208 44.80295914716182,7.3177506920192545 44.802427734488866,7.318394235932698 44.802108663367676,7.3210624751686115 44.80044643879935,7.323026448257859 44.79936349688538,7.32398235776981 44.798995065666624,7.324656635328903 44.7988337605931,7.325121365304024 44.79877769497285,7.326946198797513 44.798880885516425,7.327764272565341 44.79890193340708,7.3284195511434875 44.79896097925963,7.332573436183634 44.799152272920736,7.3337577059959855 44.799039024093126,7.334889262949435 44.798781047734195,7.341174386616969 44.79680645756736,7.344000391900548 44.79594274899235,7.344748057680161 44.79565199007806,7.346718177498539 44.795018876977686,7.348220773374009 44.79457705753841,7.349915221704138 44.79404788003969,7.35314653858125 44.793216767755524,7.354207873811004 44.79292153849277,7.355140872787108 44.79259743822956,7.357008360855469 44.79188609403117,7.358453400994541 44.791357847855046,7.360623010112859 44.79051127561579,7.361542598043589 44.78995732493603,7.362474479432579 44.78930446779663,7.363592997869692 44.788375380375435,7.364448697070376 44.78762231292477,7.365282417057807 44.78694114357847,7.365787193904531 44.78665131598677,7.367699944251029 44.786440092022126,7.368508332263865 44.78629406063916,7.369265311269432 44.786219368567004,7.369562775706413 44.78617410628887,7.369868063253196 44.78616497932743,7.370117285179733 44.786123628604194,7.371241950345977 44.78600907592496,7.372461796681474 44.78582839934144,7.374014870241616 44.785692985036064,7.37494395766282 44.78558029500202,7.376947232565595 44.78546462473567,7.378123865532664 44.785485858890844,7.380637132688697 44.7857060235524,7.380998113326686 44.785697641649044,7.381813206862208 44.785619224286506,7.382267878553298 44.785702298262024,7.382785880180878 44.78584013400614,7.382931725299322 44.78586472092267,7.383027278997614 44.78591110078792,7.383084834734012 44.785997341260256,7.38309526554708 44.786825659576635,7.383156360309341 44.78712815315563,7.3832569431496475 44.78726002843514,7.383867704507732 44.78774580630092,7.384321631140746 44.78802687946022,7.385060542487961 44.78858641807555,7.385247552065124 44.78870618616133,7.385215700832361 44.788912753512996,7.38496703769938 44.78953040665829,7.385553584669983 44.78974572844235,7.385667392291145 44.789886916947815,7.386758902372991 44.791050138869515,7.387510293442986 44.7918844176505,7.388345689811088 44.792557763887,7.38941373056353 44.79360363916167,7.389801533292268 44.79395120875429,7.390263283035083 44.79431330697939,7.3918195230920505 44.79532099802765,7.393403144033323 44.79637395135404,7.394100518392783 44.79679788939948,7.394856193546716 44.797402690292955,7.3951504914868735 44.79784339214511,7.3954390152269385 44.798599253563566,7.395532333751 44.79901909378959,7.39574430277372 44.79951716511363,7.396143653902642 44.800288113958125,7.396510036211685 44.80079736115331,7.396973462335172 44.801370869607574,7.398287185988289 44.80311784453208,7.398633265464752 44.80363137581121,7.3989128485079005 44.80398173937161,7.399119602124086 44.80430434951867,7.399624751499848 44.80482905666893,7.400140704217718 44.805407780529734,7.400456795106607 44.80584885491093,7.4006287172577245 44.80598184777756,7.401417547496055 44.806402433061656,7.401665651835478 44.80657696291604,7.401917295200764 44.80689566150819,7.402069845841896 44.80732537375373,7.402077855216217 44.80767648237221,7.401999437853681 44.80817045587682,7.401968517943513 44.80856179763142,7.401987144395422 44.808886084159155,7.402262257090112 44.810577738521495,7.40230360781335 44.810938532894966,7.402338439278418 44.811065006503426,7.4025012344681 44.81142282064459,7.402571828720834 44.81178845789556,7.402946220404198 44.811784732605176,7.403063567051222 44.81179982003122,7.403160983394704 44.811832602586584,7.403907159058164 44.812405738511806,7.404340969123117 44.81271344749734,7.404590749843212 44.812856498647996,7.404730820761565 44.81290343730681,7.404903487970758 44.81291926979093,7.405698837467257 44.81285836129319,7.407191002529658 44.81283414690571,7.409734258273264 44.81307666330956,7.410917596763021 44.81317426591756,7.412054182858486 44.813293475209775,7.412303591049543 44.81328807353872,7.413287253974838 44.81320257812446,7.414727823765452 44.81310106396156,7.416095564129105 44.813061575883516,7.416683042422303 44.81306977152235,7.417022230111559 44.81309249579368,7.41763578543743 44.81323144912492,7.418448085005166 44.81350376785183,7.418914491360958 44.81368574828697,7.419287020399131 44.81385301382511,7.419425601201332 44.81397650720127,7.419530654390097 44.8140949714354,7.419629002056174 44.814253855070184,7.419708164476786 44.81466903868323,7.4198961053765435 44.81503616605035,7.420053312630653 44.815240870756824,7.420273663556732 44.81558601891069,7.420768009590388 44.81651566512545,7.420902865102206 44.81661196388182,7.421044984930269 44.816676970198984,7.4213621934062735 44.81672185994808,7.421559075002947 44.8166976455606,7.421833442639562 44.81661587543672,7.421976121261182 44.81670341976069,7.42206832219813 44.81673173196759,7.423307540043612 44.81702789255294,7.423647659055463 44.81720819660742,7.424060607494279 44.81735776701624,7.424624616458072 44.81753211060611,7.425133491124217 44.81762468407209,7.4253640865988455 44.817681867279454,7.425636964119307 44.817789155642444,7.425821365993203 44.81788172910843,7.4259253015948525 44.817896630269956,7.426054755435618 44.81789402256669,7.4264742231326 44.81774221698364,7.42655785590167 44.81772992352538,7.426709102691168 44.817750040093436,7.426768707337276 44.81780033151359,7.42679441184091 44.81788619945689,7.4267834222342834 44.81840811263937,7.4268016761571545 44.81875493717391,7.426719906033275 44.81927591903379,7.4267335033431685 44.81932565166039,7.426881583635843 44.81945827199798,7.4273885956567955 44.81962274356833,7.428448999563955 44.819875877049775,7.429070377999627 44.82007797405298,7.429382371069097 44.820113736840646,7.430053295866847 44.8201230500666,7.430161329287916 44.82015154853802,7.430262098392742 44.82022493675854,7.430447617853752 44.82031751022453,7.430603334991709 44.820337626792586,7.43088645706072 44.82033259765057,7.431561665942408 44.82026535615918,7.432130331519179 44.82025511161063,7.433310876041149 44.820185821209535,7.433555813883747 44.82019364431933,7.4338352106623775 44.82085469709757,7.4339635469160275 44.82125255811034,7.434122989344366 44.821637380606774,7.434333468250934 44.82205424060049,7.434404621297224 44.82224423040996,7.434527555879821 44.82229098280425,7.436002770870986 44.822270679971666,7.436199279938622 44.822273473939454,7.436414415458167 44.822298805914045,7.438888194536154 44.82332735858844,7.4395365813270935 44.82360638283804,7.441667819954481 44.82458073253738,7.442415671998613 44.82487447168398,7.442683892906097 44.824941154381804,7.442930507129367 44.824980456195334,7.444366234042485 44.82514418270761,7.445648851520915 44.82532355543949,7.445929924680216 44.825372543008015,7.446116002934784 44.825428981157295,7.446443455959337 44.82557296363055,7.447434569465397 44.826185215104786,7.448058369339817 44.82659872233716,7.448494414578999 44.826924126452,7.448641563549077 44.82706568748651,7.448737862305444 44.82727858783182,7.448891903062729 44.8277848547947,7.449034209155311 44.82859249774946,7.449204641190275 44.8293599075681,7.449305969088658 44.829428825440154,7.451109195897934 44.8303670398228,7.451409826831739 44.83056466647755,7.4515351828530845 44.830683316976206,7.451647872887132 44.830725412757516,7.452330532349584 44.83074366668039,7.452414351383172 44.830762851925854,7.45248811213273 44.83080885926207,7.452580871863236 44.83090459922488,7.45271665869765 44.83111805836375,7.452812212395941 44.831330772444545,7.452891188552034 44.83142185579438,7.453074659103334 44.83152802657026,7.453208024498999 44.83157924931301,7.453897575748658 44.831692125611575,7.454724031419844 44.83178879689698,7.45506117019939 44.83185194056895,7.455198447149957 44.831894222614785,7.455263080938081 44.831931102989564,7.455326410874569 44.83199946206807,7.4555739564204355 44.83246195686896,7.455981503188196 44.83298070355462,7.456082644822061 44.833085570478865,7.457391339333162 44.83390885965322,7.457614484227028 44.83393437789234,7.45786277483097 44.83391984925985,7.4587115822444465 44.833800639967635,7.458838800910983 44.833802502612826,7.458943481570709 44.83382187412281,7.459447699623876 44.834067184494444,7.459785397196979 44.83418881522541,7.460169102106298 44.83427039908477,7.460615391894029 44.83434397356981,7.460704612598671 44.83437675612517,7.460805009174459 44.83448609339787,7.460823635626368 44.83464385944554,7.460747453438061 44.835651177964756,7.460756394134977 44.83571432163673,7.460882867743437 44.83580596378012,7.4609765587965375 44.8358253352901,7.461585830038469 44.83572996785633,7.462341505192403 44.835668128036,7.462495732214206 44.835625100932084,7.463100905636718 44.83553886045975,7.463558371295594 44.83555394788579,7.46372247033691 44.83559660246067,7.464141192975816 44.835741888785556,7.464647459938693 44.835721585952975,7.465514148746002 44.83565676590033,7.46631173341673 44.83566756924244,7.466631177066963 44.835748221779205,7.466853204373715 44.83593131980147,7.467004451163213 44.83602333447389,7.467142659436375 44.83606580278425,7.467462661880165 44.83611497661728,7.467977124481882 44.836158003721195,7.468419316450193 44.83616843453426,7.4692496836762805 44.83614794543716,7.469588685101018 44.83621555945759,7.471559177448433 44.83760583782805,7.472076992811494 44.83790088082628,7.472376878687222 44.838053431467415,7.472722958163685 44.83826055761264,7.472918871724572 44.83838506932197)";
    
    static BasicDataSource dataSource;

    @BeforeClass
    public static void setupDataSource() {
        dataSource = new BasicDataSource();
        dataSource.setDriverClassName("org.postgresql.Driver");
        dataSource.setUrl("jdbc:postgresql://192.168.122.51:5432/destination_plus");
        dataSource.setUsername("siig_p");
        dataSource.setPassword("destination");
    }

    @AfterClass
    public static void disposeDataSource() {
        try {
            dataSource.close();
        } catch (SQLException e) {
            // ignore
        }
    }

    // TODO: prepare fixture to run integration tests
    @Test
    @Ignore
    public void testGraphCreation() {
        //GraphHopper hopper = new DestinationGraphHopper(dataSource, DestinationWeightType.RISK_ENV);
        GraphHopper hopper = new DestinationGraphHopper(dataSource, WeightType.DYNAMIC);
        
        String sysTemp = System.getProperty("java.io.tmpdir");
        File tmpDir = new File(new File(sysTemp), "gh-" + System.currentTimeMillis());
        tmpDir.mkdir();
        
        try {
            hopper.setOSMFile("fake.osm");
            hopper.setGraphHopperLocation(tmpDir.getAbsolutePath());
            //hopper.setEncodingManager(new DestinationEncodingManager(DestinationEncodingManager.PRECALC_RISK, 8));
            hopper.setEncodingManager(DestinationEncodingManager.createDefault());
            hopper.setCHEnable(false);
            
            hopper.importOrLoad();
            
            // TODO: this assertion fails, probably due to graph simplification?
            //assertEquals(66622, hopper.getGraph().getNodes());
            
            final Double lonFrom = 7.3142;
            final Double lonTo = 7.4729;
            final Double latFrom = 44.7895;
            final Double latTo = 44.8384;
            GHRequest req = new GHRequest(latFrom, lonFrom, latTo, lonTo).
                    //setWeighting(PrecalculatedRiskWeighting.NAME).
                    setWeighting(FormulaWeighting.NAME).
                    setVehicle(FormulaWeighting.NAME).
                    setLocale(Locale.US);
            GHResponse rsp = hopper.route(req);
            
            assertFalse(rsp.hasErrors());
            assertTrue(rsp.getDistance() > 0);
            assertTrue(rsp.getMillis() > 0);
            assertTrue(rsp.getRouteWeight() > 0);
            
            PointList pointList = rsp.getPoints();
            
            StringBuilder wktBuilder = new StringBuilder();
            wktBuilder.append("LINESTRING(");
            for (int i=0; i<pointList.getSize(); i++) {
                wktBuilder.append(pointList.getLon(i)).append(" ").append(pointList.getLat(i));
                if (i<pointList.getSize()-1) {
                    wktBuilder.append(",");
                }
            }
            wktBuilder.append(")");
            assertEquals(EXPECTED_LINESTRING, wktBuilder.toString());
        } finally {
            try {
                FileUtils.deleteDirectory(tmpDir);
            } catch (IOException e) {
                LOGGER.log(Level.FINER, "Exception deleting temp directory", e);
            }
        }
    }
    
    // TODO: add tests for weight types other than dynamic/formula
}
